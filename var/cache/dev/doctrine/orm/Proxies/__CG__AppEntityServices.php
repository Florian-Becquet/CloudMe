<?php

namespace Proxies\__CG__\App\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Services extends \App\Entity\Services implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Services' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Services' . "\0" . 'architecture', '' . "\0" . 'App\\Entity\\Services' . "\0" . 'description', '' . "\0" . 'App\\Entity\\Services' . "\0" . 'headline', '' . "\0" . 'App\\Entity\\Services' . "\0" . 'location', '' . "\0" . 'App\\Entity\\Services' . "\0" . 'OS', '' . "\0" . 'App\\Entity\\Services' . "\0" . 'package', '' . "\0" . 'App\\Entity\\Services' . "\0" . 'section', '' . "\0" . 'App\\Entity\\Services' . "\0" . 'template', '' . "\0" . 'App\\Entity\\Services' . "\0" . 'type', '' . "\0" . 'App\\Entity\\Services' . "\0" . 'version', '' . "\0" . 'App\\Entity\\Services' . "\0" . 'available', '' . "\0" . 'App\\Entity\\Services' . "\0" . 'subscriptions', '' . "\0" . 'App\\Entity\\Services' . "\0" . 'service_type', '' . "\0" . 'App\\Entity\\Services' . "\0" . 'use_consumption'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Services' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Services' . "\0" . 'architecture', '' . "\0" . 'App\\Entity\\Services' . "\0" . 'description', '' . "\0" . 'App\\Entity\\Services' . "\0" . 'headline', '' . "\0" . 'App\\Entity\\Services' . "\0" . 'location', '' . "\0" . 'App\\Entity\\Services' . "\0" . 'OS', '' . "\0" . 'App\\Entity\\Services' . "\0" . 'package', '' . "\0" . 'App\\Entity\\Services' . "\0" . 'section', '' . "\0" . 'App\\Entity\\Services' . "\0" . 'template', '' . "\0" . 'App\\Entity\\Services' . "\0" . 'type', '' . "\0" . 'App\\Entity\\Services' . "\0" . 'version', '' . "\0" . 'App\\Entity\\Services' . "\0" . 'available', '' . "\0" . 'App\\Entity\\Services' . "\0" . 'subscriptions', '' . "\0" . 'App\\Entity\\Services' . "\0" . 'service_type', '' . "\0" . 'App\\Entity\\Services' . "\0" . 'use_consumption'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Services $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setId(int $id): \App\Entity\Services
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', [$id]);

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function getArchitecture(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getArchitecture', []);

        return parent::getArchitecture();
    }

    /**
     * {@inheritDoc}
     */
    public function setArchitecture(string $architecture): \App\Entity\Services
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setArchitecture', [$architecture]);

        return parent::setArchitecture($architecture);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', []);

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription(string $description): \App\Entity\Services
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', [$description]);

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getHeadline(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHeadline', []);

        return parent::getHeadline();
    }

    /**
     * {@inheritDoc}
     */
    public function setHeadline(string $headline): \App\Entity\Services
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHeadline', [$headline]);

        return parent::setHeadline($headline);
    }

    /**
     * {@inheritDoc}
     */
    public function getLocation(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLocation', []);

        return parent::getLocation();
    }

    /**
     * {@inheritDoc}
     */
    public function setLocation(string $location): \App\Entity\Services
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLocation', [$location]);

        return parent::setLocation($location);
    }

    /**
     * {@inheritDoc}
     */
    public function getOS(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOS', []);

        return parent::getOS();
    }

    /**
     * {@inheritDoc}
     */
    public function setOS(string $OS): \App\Entity\Services
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOS', [$OS]);

        return parent::setOS($OS);
    }

    /**
     * {@inheritDoc}
     */
    public function getPackage(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPackage', []);

        return parent::getPackage();
    }

    /**
     * {@inheritDoc}
     */
    public function setPackage(string $package): \App\Entity\Services
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPackage', [$package]);

        return parent::setPackage($package);
    }

    /**
     * {@inheritDoc}
     */
    public function getSection(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSection', []);

        return parent::getSection();
    }

    /**
     * {@inheritDoc}
     */
    public function setSection(string $section): \App\Entity\Services
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSection', [$section]);

        return parent::setSection($section);
    }

    /**
     * {@inheritDoc}
     */
    public function getTemplate(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTemplate', []);

        return parent::getTemplate();
    }

    /**
     * {@inheritDoc}
     */
    public function setTemplate(string $template): \App\Entity\Services
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTemplate', [$template]);

        return parent::setTemplate($template);
    }

    /**
     * {@inheritDoc}
     */
    public function getType(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getType', []);

        return parent::getType();
    }

    /**
     * {@inheritDoc}
     */
    public function setType(string $type): \App\Entity\Services
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setType', [$type]);

        return parent::setType($type);
    }

    /**
     * {@inheritDoc}
     */
    public function getVersion(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVersion', []);

        return parent::getVersion();
    }

    /**
     * {@inheritDoc}
     */
    public function setVersion(string $version): \App\Entity\Services
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVersion', [$version]);

        return parent::setVersion($version);
    }

    /**
     * {@inheritDoc}
     */
    public function getAvailable(): ?bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAvailable', []);

        return parent::getAvailable();
    }

    /**
     * {@inheritDoc}
     */
    public function setAvailable(bool $available): \App\Entity\Services
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAvailable', [$available]);

        return parent::setAvailable($available);
    }

    /**
     * {@inheritDoc}
     */
    public function getSubscriptions(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSubscriptions', []);

        return parent::getSubscriptions();
    }

    /**
     * {@inheritDoc}
     */
    public function addSubscription(\App\Entity\Subscription $subscription): \App\Entity\Services
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addSubscription', [$subscription]);

        return parent::addSubscription($subscription);
    }

    /**
     * {@inheritDoc}
     */
    public function removeSubscription(\App\Entity\Subscription $subscription): \App\Entity\Services
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeSubscription', [$subscription]);

        return parent::removeSubscription($subscription);
    }

    /**
     * {@inheritDoc}
     */
    public function getServiceType(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getServiceType', []);

        return parent::getServiceType();
    }

    /**
     * {@inheritDoc}
     */
    public function setServiceType(?string $service_type): \App\Entity\Services
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setServiceType', [$service_type]);

        return parent::setServiceType($service_type);
    }

    /**
     * {@inheritDoc}
     */
    public function getUseConsumption(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUseConsumption', []);

        return parent::getUseConsumption();
    }

    /**
     * {@inheritDoc}
     */
    public function setUseConsumption(?string $use_consumption): \App\Entity\Services
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUseConsumption', [$use_consumption]);

        return parent::setUseConsumption($use_consumption);
    }

}
